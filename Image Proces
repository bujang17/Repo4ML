import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.preprocessing.image import load_img, img_to_array
import matplotlib.pyplot as plt


def load_and_preprocess_image(image_path, target_size=(28, 28)):

    img = load_img(image_path, target_size=target_size, color_mode='grayscale')
    img_array = img_to_array(img)
    img_array = img_array / 255.0 
    img_array = np.expand_dims(img_array, axis=0) 
    return img_array


image_path = 'naruto.jpg'
img_array = load_and_preprocess_image(image_path)


plt.imshow(img_array[0].reshape(28, 28), cmap='gray')
plt.title('')
plt.show()


model = Sequential()
model.add(Flatten(input_shape=(28, 28, 1)))  # Flatten layer to convert 2D image to 1D array
model.add(Dense(128, activation='relu'))
model.add(Dense(64, activation='relu'))
model.add(Dense(10, activation='softmax'))


model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])


predictions = model.predict(img_array)
predicted_class = np.argmax(predictions, axis=1)

# Cetak hasil prediksi
print("Predicted class:", predicted_class)
