# 1. Import Library yang Diperlukan
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder

# 2. Muat dan Prasiapkan Dataset
# Muat dataset Iris
iris = load_iris()
X = iris.data
y = iris.target.reshape(-1, 1)

# One-hot encode label
encoder = OneHotEncoder(sparse=False)
y = encoder.fit_transform(y)

# Bagi dataset menjadi set pelatihan dan set pengujian
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Bangun Model ANN
model = Sequential()
model.add(Dense(10, input_shape=(4,), activation='relu'))
model.add(Dense(10, activation='relu'))
model.add(Dense(3, activation='softmax'))

# Kompilasi model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# 4. Latih Model
model.fit(X_train, y_train, epochs=100, batch_size=5, verbose=1)

# 5. Evaluasi Model
loss, accuracy = model.evaluate(X_test, y_test, verbose=0)
print(f'Loss: {loss}, Accuracy: {accuracy}')

# Prediksi menggunakan model
predictions = model.predict(X_test)
predicted_classes = np.argmax(predictions, axis=1)
true_classes = np.argmax(y_test, axis=1)

# Cetak hasil prediksi
print("Predicted classes:", predicted_classes)
print("True classes:", true_classes)
